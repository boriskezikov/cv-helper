/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id "org.liquibase.gradle" version "2.0.4"
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        url = uri('https://maven.vaadin.com/vaadin-prereleases/')
    }

    maven {
        url = uri('https://maven.vaadin.com/vaadin-addons')
    }
}

dependencies {
    implementation 'com.vaadin:vaadin:23.0.4'
    implementation 'com.vaadin:vaadin-spring-boot-starter:23.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.6'
    implementation 'com.vaadin:exampledata:4.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.6'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.6'
    implementation 'org.springframework.boot:spring-boot-devtools:2.6.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.6'
    testImplementation 'com.vaadin:vaadin-testbench:23.0.4'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.2'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.0.3'

    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.jeasy:easy-random-core:5.0.0'

    implementation 'org.telegram:telegrambotsextensions:5.7.1'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

group = 'com.olim.cvhelper'
version = '1.0-SNAPSHOT'
description = 'Cv Helper'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
